from dataclasses import dataclass, field, asdict
from typing import List, Dict, Any, Optional, Union

@dataclass
class ParsedOffer:
    """Standardized structure for parsed leasing offer data."""
    filename: str = "N/A"
    vendor: Optional[str] = None
    vehicle_description: Optional[str] = None
    
    # Contract terms
    offer_duration_months: Optional[int] = None
    offer_total_mileage: Optional[int] = None
    
    # Core costs
    monthly_rental: Optional[float] = None
    total_monthly_lease: Optional[float] = None # Often the primary value to use
    upfront_costs: Optional[float] = None
    deposit: Optional[float] = None
    
    # Other financial details
    excess_mileage_rate: Optional[float] = None
    unused_mileage_rate: Optional[float] = None
    currency: Optional[str] = None
    
    # Vehicle specifications
    manufacturer: Optional[str] = None
    model: Optional[str] = None
    version: Optional[str] = None
    fuel_type: Optional[str] = None
    c02_emission: Optional[float] = None
    
    # Itemized costs and lists
    maintenance_repair: Optional[float] = None
    insurance_cost: Optional[float] = None
    management_fee: Optional[float] = None
    tyres_cost: Optional[float] = None
    roadside_assistance: Optional[float] = None
    options_list: List[Dict[str, Union[str, float]]] = field(default_factory=list)
    accessories_list: List[Dict[str, Union[str, float]]] = field(default_factory=list)
    
    # Metadata
    parsing_confidence: float = 0.0
    warnings: List[str] = field(default_factory=list)
